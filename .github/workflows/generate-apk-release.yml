name: Android CI

on:
  push:
    branches:
      - 'release/**'
  workflow_dispatch:
    inputs:
      version:
        description: 'Application version'
        required: true
        default: '1.0'

env:
  APP_MODULE: app
  AAB_NAME: mini-snake-bundle
  PLAYSTORE_NAME: MiniSnake Game
  PACKAGE_NAME: de.nazmi.minisnake
  KEYSTORE: ${{ secrets.KEYSTORE }}
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT_JSON }}
  KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
  KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
  STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
  JAVA_VERSION: '17'

jobs:
  build_and_sign:
    name: Build and Sign AAB
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Decode Keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'android_keystore.jks'
          fileDir: ${{ github.workspace }}/app/keystore/
          encodedString: ${{ env.KEYSTORE }}

      - name: Build AAB
        run: ./gradlew bundleRelease
        env:
          SIGNING_KEY_ALIAS: ${{ env.KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ env.KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ env.STORE_PASSWORD }}

      - name: Upload AAB as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: aab-artifact
          path: app/build/outputs/bundle/release/app-release.aab

      - name: Upload Mapping File as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: mapping-artifact
          path: app/build/outputs/mapping/release/mapping.txt

  prepare_whats_new:
    name: Prepare What's New Notes
    runs-on: ubuntu-latest
    needs: build_and_sign
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Prepare What's New Notes
        run: |
          if [ -d "distribution/whatsnew" ]; then
            echo "What's new directory exists."
          else
            echo "Creating What's New directory and default note."
            mkdir -p distribution/whatsnew
            echo "Some fixes and improvements." > distribution/whatsnew/en-US
          fi

      - name: Upload What's New Notes as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: whatsnew-artifact
          path: distribution/whatsnew

  release:
    name: Release to Play Store
    needs: [ build_and_sign, prepare_whats_new ]
    runs-on: ubuntu-latest
    steps:
      - name: Download AAB Artifact
        uses: actions/download-artifact@v2
        with:
          name: aab-artifact
          path: output/aab/

      - name: Download Mapping File Artifact
        uses: actions/download-artifact@v2
        with:
          name: mapping-artifact
          path: output/mapping/

      - name: Download What's New Notes Artifact
        uses: actions/download-artifact@v2
        with:
          name: whatsnew-artifact
          path: output/whatsnew/

      - name: Upload Play Store Release
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ env.SERVICE_ACCOUNT }}
          packageName: ${{ env.PACKAGE_NAME }}
          releaseFiles: output/aab/app-release.aab
          track: production
          status: inProgress
          inAppUpdatePriority: 1
          userFraction: 0.2
          whatsNewDirectory: output/whatsnew/
          mappingFile: output/mapping/mapping.txt
